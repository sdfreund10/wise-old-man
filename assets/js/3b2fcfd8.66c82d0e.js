"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[590],{6510:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(6010),n=a(7294);const l={verb:"verb_Nwub",path:"path_stP6",post:"post_PxBq",delete:"delete_r1td",get:"get_DBE8",put:"put_QdXb",patch:"patch_xPbH"},o=e=>{const{verb:t,path:a}=e;return n.createElement("div",null,n.createElement("span",{className:(0,r.Z)(l.verb,l[t.toLowerCase()])},t),n.createElement("span",{className:l.path},a))}},930:(e,t,a)=>{a.d(t,{Z:()=>h});var r=a(7294),n=a(814),l=a(7462),o=a(6010),i=a(2389),d=a(7392),p=a(7094),s=a(2466);const u="tabList__CuJ",c="tabItem_LNqP";function m(e){var t;const{lazy:a,block:n,defaultValue:i,values:m,groupId:b,className:k}=e,y=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??y.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),h=(0,d.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===i?i:i??(null==(t=y.find((e=>e.props.default)))?void 0:t.props.value)??y[0].props.value;if(null!==N&&!g.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,p.U)(),[T,E]=(0,r.useState)(N),w=[],{blockElementScrollPositionUntilNextRender:Z}=(0,s.o5)();if(null!=b){const e=f[b];null!=e&&e!==T&&g.some((t=>t.value===e))&&E(e)}const C=e=>{const t=e.currentTarget,a=w.indexOf(t),r=g[a].value;r!==T&&(Z(t),E(r),null!=b&&v(b,String(r)))},R=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;a=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;a=w[t]??w[w.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},k)},g.map((e=>{let{value:t,label:a,attributes:n}=e;return r.createElement("li",(0,l.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>w.push(e),onKeyDown:R,onFocus:C,onClick:C},n,{className:(0,o.Z)("tabs__item",c,null==n?void 0:n.className,{"tabs__item--active":T===t})}),a??t)}))),a?(0,r.cloneElement)(y.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function b(e){const t=(0,i.Z)();return r.createElement(m,(0,l.Z)({key:String(t)},e))}const k="tabItem_Ymn6";function y(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(k,n),hidden:a},t)}const g={curl:"cURL",javascript:"JavaScript / TypeScript"},h=e=>{const{children:t}=e,a=t.map((e=>{const t=e.props.children.props;return{language:t.className.replace("language-",""),code:t.children}}));return r.createElement(b,{groupId:"tabbed-code-block"},a.map((e=>r.createElement(y,{value:e.language,label:g[e.language]},r.createElement(n.Z,{language:e.language},e.code)))))}},731:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=a(7462),n=(a(7294),a(3905)),l=a(6510),o=a(930);const i={title:"Record Endpoints",sidebar_position:2},d=void 0,p={unversionedId:"api/records/record-endpoints",id:"api/records/record-endpoints",title:"Record Endpoints",description:"Related Endpoints",source:"@site/docs/api/records/record-endpoints.mdx",sourceDirName:"api/records",slug:"/api/records/record-endpoints",permalink:"/api/records/record-endpoints",draft:!1,editUrl:"https://github.com/wise-old-man/wise-old-man/tree/master/docs/docs/api/records/record-endpoints.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Record Endpoints",sidebar_position:2},sidebar:"api",previous:{title:"Record Types & Entities",permalink:"/api/records/record-type-definitions"},next:{title:"Deltas API",permalink:"/api/deltas"}},s={},u=[{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Get Global Record Leaderboards",id:"get-global-record-leaderboards",level:2}],c={toc:u};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"related-endpoints"},"Related Endpoints"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/players/player-endpoints#get-player-records"},"Players - Get Player Records")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/groups/group-endpoints#get-group-records"},"Groups - Get Group Records"))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"get-global-record-leaderboards"},"Get Global Record Leaderboards"),(0,n.kt)(l.Z,{verb:"GET",path:"/records/leaderboard",mdxType:"Endpoint"}),(0,n.kt)("br",null),(0,n.kt)("p",null,"Fetches the current records leaderboard for a specific metric and period. Returns an array of ",(0,n.kt)("a",{parentName:"p",href:"/api/records/record-type-definitions#object-record-leaderboard-entry"},"RecordLeaderboardEntry")," objects."),(0,n.kt)("br",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Query Params")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Field"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Required"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"period"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-period"},"Period")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"true")),(0,n.kt)("td",{parentName:"tr",align:null},"The record's time period.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"metric"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"true")),(0,n.kt)("td",{parentName:"tr",align:null},"The record's metric.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"playerType"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/players/player-type-definitions#enum-player-type"},"PlayerType"),"?"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"false")),(0,n.kt)("td",{parentName:"tr",align:null},"The player's account type to filter by.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"playerBuild"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/players/player-type-definitions#enum-player-build"},"PlayerBuild"),"?"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"false")),(0,n.kt)("td",{parentName:"tr",align:null},"The player's account build to filter by.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"country"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/api/players/player-type-definitions#enum-country"},"Country"),"?"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"false")),(0,n.kt)("td",{parentName:"tr",align:null},"The player's country of origin to filter by.")))),(0,n.kt)("br",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example Request")),(0,n.kt)(o.Z,{mdxType:"TabbedCodeBlock"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/records/leaderboard?metric=agility&period=week&playerType=hardcore \\\n  -H "Content-Type: application/json"\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, Metric, Period, PlayerType } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst recordLeaderboard = await client.records.getRecordLeaderboard({\n  period: Period.WEEK,\n  metric: Metric.AGILITY,\n  playerType: PlayerType.HARDCORE\n});\n"))),(0,n.kt)("br",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example Response")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 544337,\n    "playerId": 6125,\n    "period": "week",\n    "metric": "agility",\n    "value": 12260231,\n    "updatedAt": "2020-05-12T18:12:16.057Z",\n    "player": {\n      "id": 6125,\n      "username": "maiet",\n      "displayName": "Maiet",\n      "type": "hardcore",\n      "build": "main",\n      "country": null,\n      "status": "active",\n      "patron": false,\n      "exp": 84931683,\n      "ehp": 556.42089,\n      "ehb": 4.42807,\n      "ttm": 1252.71697,\n      "tt200m": 22202.34046,\n      "registeredAt": "2020-05-07T15:12:57.549Z",\n      "updatedAt": "2020-12-17T17:24:41.831Z",\n      "lastChangedAt": "2020-12-17T17:24:40.549Z",\n      "lastImportedAt": "2020-12-17T17:24:41.830Z"\n    }\n  },\n  {\n    "id": 36895589,\n    "playerId": 672185,\n    "period": "week",\n    "metric": "agility",\n    "value": 7518730,\n    "updatedAt": "2022-07-27T23:59:50.075Z",\n    "player": {\n      "id": 672185,\n      "username": "99th hcim",\n      "displayName": "99th hcim",\n      "type": "hardcore",\n      "build": "def1",\n      "country": null,\n      "status": "active",\n      "patron": false,\n      "exp": 42931077,\n      "ehp": 293.81497,\n      "ehb": 0,\n      "ttm": 1468.43043,\n      "tt200m": 22158.99634,\n      "registeredAt": "2022-07-05T05:22:41.911Z",\n      "updatedAt": "2022-08-20T03:56:12.107Z",\n      "lastChangedAt": "2022-08-20T03:56:12.009Z",\n      "lastImportedAt": null\n    }\n  }\n]\n')))}m.isMDXComponent=!0}}]);