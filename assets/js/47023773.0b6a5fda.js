"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[128],{6510:(t,e,n)=>{n.d(e,{Z:()=>r});var a=n(6010),l=n(7294);const i={verb:"verb_Nwub",path:"path_stP6",post:"post_PxBq",delete:"delete_r1td",get:"get_DBE8",put:"put_QdXb",patch:"patch_xPbH"},r=t=>{const{verb:e,path:n}=t;return l.createElement("div",null,l.createElement("span",{className:(0,a.Z)(i.verb,i[e.toLowerCase()])},e),l.createElement("span",{className:i.path},n))}},930:(t,e,n)=>{n.d(e,{Z:()=>b});var a=n(7294),l=n(814),i=n(7462),r=n(6010),p=n(2389),o=n(7392),m=n(7094),d=n(2466);const s="tabList__CuJ",u="tabItem_LNqP";function k(t){var e;const{lazy:n,block:l,defaultValue:p,values:k,groupId:c,className:N}=t,g=a.Children.map(t.children,(t=>{if((0,a.isValidElement)(t)&&"value"in t.props)return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=k??g.map((t=>{let{props:{value:e,label:n,attributes:a}}=t;return{value:e,label:n,attributes:a}})),b=(0,o.l)(h,((t,e)=>t.value===e.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===p?p:p??(null==(e=g.find((t=>t.props.default)))?void 0:e.props.value)??g[0].props.value;if(null!==y&&!h.some((t=>t.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${h.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:T,setTabGroupChoices:v}=(0,m.U)(),[f,C]=(0,a.useState)(y),Z=[],{blockElementScrollPositionUntilNextRender:w}=(0,d.o5)();if(null!=c){const t=T[c];null!=t&&t!==f&&h.some((e=>e.value===t))&&C(t)}const A=t=>{const e=t.currentTarget,n=Z.indexOf(e),a=h[n].value;a!==f&&(w(e),C(a),null!=c&&v(c,String(a)))},E=t=>{var e;let n=null;switch(t.key){case"ArrowRight":{const e=Z.indexOf(t.currentTarget)+1;n=Z[e]??Z[0];break}case"ArrowLeft":{const e=Z.indexOf(t.currentTarget)-1;n=Z[e]??Z[Z.length-1];break}}null==(e=n)||e.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",s)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},N)},h.map((t=>{let{value:e,label:n,attributes:l}=t;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:f===e?0:-1,"aria-selected":f===e,key:e,ref:t=>Z.push(t),onKeyDown:E,onFocus:A,onClick:A},l,{className:(0,r.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":f===e})}),n??e)}))),n?(0,a.cloneElement)(g.filter((t=>t.props.value===f))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((t,e)=>(0,a.cloneElement)(t,{key:e,hidden:t.props.value!==f})))))}function c(t){const e=(0,p.Z)();return a.createElement(k,(0,i.Z)({key:String(e)},t))}const N="tabItem_Ymn6";function g(t){let{children:e,hidden:n,className:l}=t;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(N,l),hidden:n},e)}const h={curl:"cURL",javascript:"JavaScript / TypeScript"},b=t=>{const{children:e}=t,n=e.map((t=>{const e=t.props.children.props;return{language:e.className.replace("language-",""),code:e.children}}));return a.createElement(c,{groupId:"tabbed-code-block"},n.map((t=>a.createElement(g,{value:t.language,label:h[t.language]},a.createElement(l.Z,{language:t.language},t.code)))))}},4955:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>k,frontMatter:()=>p,metadata:()=>m,toc:()=>s});var a=n(7462),l=(n(7294),n(3905)),i=n(6510),r=n(930);const p={title:"Competition Endpoints",sidebar_position:2},o=void 0,m={unversionedId:"api/competitions/competition-endpoints",id:"api/competitions/competition-endpoints",title:"Competition Endpoints",description:"Related Endpoints",source:"@site/docs/api/competitions/competition-endpoints.mdx",sourceDirName:"api/competitions",slug:"/api/competitions/competition-endpoints",permalink:"/api/competitions/competition-endpoints",draft:!1,editUrl:"https://github.com/wise-old-man/wise-old-man/tree/master/docs/docs/api/competitions/competition-endpoints.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Competition Endpoints",sidebar_position:2},sidebar:"api",previous:{title:"Competition Types & Entities",permalink:"/api/competitions/competition-type-definitions"},next:{title:"Records API",permalink:"/api/records"}},d={},s=[{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Search Competitions",id:"search-competitions",level:2},{value:"Get Competition Details",id:"get-competition-details",level:2},{value:"Get Competition Details CSV",id:"get-competition-details-csv",level:2},{value:"Get Top Participants&#39; History",id:"get-top-participants-history",level:2},{value:"Create Competition",id:"create-competition",level:2},{value:"Edit Competition",id:"edit-competition",level:2},{value:"Delete Competition",id:"delete-competition",level:2},{value:"Add Participants",id:"add-participants",level:2},{value:"Remove Participants",id:"remove-participants",level:2},{value:"Add Teams",id:"add-teams",level:2},{value:"Remove Teams",id:"remove-teams",level:2},{value:"Update All (Outdated) Participants",id:"update-all-outdated-participants",level:2}],u={toc:s};function k(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"related-endpoints"},"Related Endpoints"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/players/player-endpoints#get-player-competition-participations"},"Players - Get Player Competition Participations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/players/player-endpoints#get-player-competition-standings"},"Players - Get Player Competition Standings")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/groups/group-endpoints#get-group-competitions"},"Groups - Get Group Competitions"))),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"search-competitions"},"Search Competitions"),(0,l.kt)(i.Z,{verb:"GET",path:"/competitions",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Searches for competitions that match a title, type, metric and status filter. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-competition"},"Competition")," objects."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"title"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The partial title for the competition you're trying to search for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#enum-competition-type"},"CompetitionType")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The type to filter the competitions by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"status"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#enum-competition-status"},"CompetitionStatus")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The status to filter the competitions by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The metric to filter the competitions by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination limit. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination offset. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/competitions?title=the&status=ongoing&limit=2 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, CompetitionStatus } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst competitions = await client.competitions.searchCompetitions(\n  { title: 'the', status: CompetitionStatus.ONGOING },\n  { limit: 2 }\n);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 16730,\n    "title": "Skill of The Week #18",\n    "metric": "hunter",\n    "type": "classic",\n    "startsAt": "2022-10-30T13:00:00.000Z",\n    "endsAt": "2022-11-06T13:00:00.000Z",\n    "groupId": 2125,\n    "score": 546,\n    "createdAt": "2022-10-30T11:59:20.981Z",\n    "updatedAt": "2022-10-30T21:20:20.276Z",\n    "group": {\n      "id": 2125,\n      "name": "World 514",\n      "clanChat": "World 514",\n      "description": "We need no description.",\n      "homeworld": 514,\n      "verified": true,\n      "patron": false,\n      "profileImage": null,\n      "bannerImage": null,\n      "score": 440,\n      "createdAt": "2021-11-08T16:51:58.884Z",\n      "updatedAt": "2022-10-26T10:30:46.343Z",\n      "memberCount": 243\n    },\n    "participantCount": 243\n  },\n  {\n    "id": 16607,\n    "title": "Smithing Skill of the Week",\n    "metric": "smithing",\n    "type": "classic",\n    "startsAt": "2022-10-26T04:00:00.000Z",\n    "endsAt": "2022-11-02T04:00:00.000Z",\n    "groupId": 1053,\n    "score": 522,\n    "createdAt": "2022-10-25T14:57:11.701Z",\n    "updatedAt": "2022-10-27T20:51:31.134Z",\n    "group": {\n      "id": 1053,\n      "name": "Mightiee",\n      "clanChat": "Mightiee",\n      "description": "Keep the vibes vibey & chill with the homies.",\n      "homeworld": 306,\n      "verified": true,\n      "patron": false,\n      "profileImage": null,\n      "bannerImage": null,\n      "score": 380,\n      "createdAt": "2021-04-27T17:50:15.723Z",\n      "updatedAt": "2022-10-29T15:04:08.204Z",\n      "memberCount": 497\n    },\n    "participantCount": 497\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-competition-details"},"Get Competition Details"),(0,l.kt)(i.Z,{verb:"GET",path:"/competitions/:id",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches the competition's full details, including all the participants and their progress. Returns a ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-competition-details"},"CompetitionDetails")," object."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"An alternative metric to preview the competition's progress in. (Ex: If it's originally an ",(0,l.kt)("inlineCode",{parentName:"td"},"agility")," competition, you can still use this param to preview what the competition would have looked like if it were a ",(0,l.kt)("inlineCode",{parentName:"td"},"fishing")," competition instead.)")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/competitions/123 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst competition = await client.competitions.getCompetitionDetails(123);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1234,\n  "title": "BOTW 1 (barrows)",\n  "metric": "barrows_chests",\n  "type": "classic",\n  "startsAt": "2021-01-25T05:00:00.000Z",\n  "endsAt": "2021-02-01T00:00:00.000Z",\n  "groupId": null,\n  "score": 0,\n  "createdAt": "2021-01-20T20:02:38.565Z",\n  "updatedAt": "2021-02-01T00:00:00.204Z",\n  "participantCount": 46,\n  "participations": [\n    {\n      "playerId": 127754,\n      "competitionId": 1234,\n      "teamName": null,\n      "createdAt": "2021-01-23T11:19:08.693Z",\n      "updatedAt": "2021-01-31T23:51:59.107Z",\n      "player": {\n        "id": 127754,\n        "username": "matiieu",\n        "displayName": "Matiieu",\n        "type": "ironman",\n        "build": "main",\n        "country": null,\n        "status": "active",\n        "patron": false,\n        "exp": 131693581,\n        "ehp": 636.3791899999997,\n        "ehb": 147.17091,\n        "ttm": 1128.26096,\n        "tt200m": 21816.43212,\n        "registeredAt": "2021-01-04T03:32:34.771Z",\n        "updatedAt": "2022-10-31T07:02:47.126Z",\n        "lastChangedAt": "2021-09-06T05:04:08.102Z",\n        "lastImportedAt": null\n      },\n      "progress": {\n        "gained": 325,\n        "start": 485,\n        "end": 810\n      },\n      "levels": {\n        "gained": 0,\n        "start": -1,\n        "end": -1\n      }\n    },\n    {\n      "playerId": 50166,\n      "competitionId": 1234,\n      "teamName": null,\n      "createdAt": "2021-01-21T06:41:41.623Z",\n      "updatedAt": "2021-01-31T23:52:29.802Z",\n      "player": {\n        "id": 50166,\n        "username": "bigfoot im",\n        "displayName": "BIGFOOT IM",\n        "type": "ironman",\n        "build": "main",\n        "country": null,\n        "status": "active",\n        "patron": false,\n        "exp": 273787595,\n        "ehp": 1218.101500000001,\n        "ehb": 495.66578,\n        "ttm": 584.3492799999985,\n        "tt200m": 21234.70981,\n        "registeredAt": "2020-10-13T17:23:56.794Z",\n        "updatedAt": "2022-10-31T05:28:14.490Z",\n        "lastChangedAt": "2022-10-29T05:27:05.665Z",\n        "lastImportedAt": "2022-10-26T04:15:29.869Z"\n      },\n      "progress": {\n        "gained": 298,\n        "start": 552,\n        "end": 850\n      },\n      "levels": {\n        "gained": 0,\n        "start": -1,\n        "end": -1\n      }\n    }\n  ]\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-competition-details-csv"},"Get Competition Details CSV"),(0,l.kt)(i.Z,{verb:"GET",path:"/competitions/:id/csv",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches the competition's details in CSV format."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"This endpoint returns plain text, not a JSON response.")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"An alternative metric to preview the competition's progress in. (Ex: If it's originally an ",(0,l.kt)("inlineCode",{parentName:"td"},"agility")," competition, you can still use this param to preview what the competition would have looked like if it were a ",(0,l.kt)("inlineCode",{parentName:"td"},"fishing")," competition instead.)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"teamName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The optional team name to get competition details for. Only used when ",(0,l.kt)("inlineCode",{parentName:"td"},"table")," is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"'team'"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"competition-type-definitions#enum-competition-csv-table-type"},"Competition CSV Table Type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The optional CSV table type to use, defaults to ",(0,l.kt)("inlineCode",{parentName:"td"},"'participants'"),".")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/competitions/123/csv \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst csv = await client.competitions.getCompetitionDetailsCSV(123);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Rank,Username,Start,End,Gained,Last Updated\n1,Jonxslays,13088583,15173063,2084480,12-03-2023 07:07\n2,Psikoi,10531887,11505398,973511,12-03-2023 02:51\n3,Rro,17087369,17893813,806444,12-03-2023 12:55\n4,Aluminoti,2614826,3263458,648632,12-03-2023 02:51\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-top-participants-history"},"Get Top Participants' History"),(0,l.kt)(i.Z,{verb:"GET",path:"/competitions/:id/top-history",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all the values (exp, kc, etc) in chronological order within the bounds of the competition, for the top 5 participants. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-participant-history-result"},"ParticipantHistory")," objects."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"An alternative metric to preview the competition's progress in. (Ex: If it's originally an ",(0,l.kt)("inlineCode",{parentName:"td"},"agility")," competition, you can still use this param to preview what the competition would have looked like if it were a ",(0,l.kt)("inlineCode",{parentName:"td"},"fishing")," competition instead.)")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/competitions/123/top-history \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst top5History = await client.competitions.getCompetitionTopHistory(123);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "player": {\n      "id": 127754,\n      "username": "matiieu",\n      "displayName": "Matiieu",\n      "type": "ironman",\n      "build": "main",\n      "country": null,\n      "status": "active",\n      "patron": false,\n      "exp": 131693581,\n      "ehp": 636.3791899999997,\n      "ehb": 147.17091,\n      "ttm": 1128.26096,\n      "tt200m": 21816.43212,\n      "registeredAt": "2021-01-04T03:32:34.771Z",\n      "updatedAt": "2022-10-31T07:02:47.126Z",\n      "lastChangedAt": "2021-09-06T05:04:08.102Z",\n      "lastImportedAt": null\n    },\n    "history": [\n      {\n        "value": 810,\n        "date": "2021-01-31T23:51:59.079Z"\n      },\n      {\n        "value": 797,\n        "date": "2021-01-31T23:45:18.450Z"\n      },\n      {\n        "value": 525,\n        "date": "2021-01-25T14:36:57.616Z"\n      },\n      {\n        "value": 485,\n        "date": "2021-01-25T05:10:16.939Z"\n      }\n    ]\n  },\n  {\n    "player": {\n      "id": 50166,\n      "username": "bigfoot im",\n      "displayName": "BIGFOOT IM",\n      "type": "ironman",\n      "build": "main",\n      "country": null,\n      "status": "active",\n      "patron": false,\n      "exp": 273787595,\n      "ehp": 1218.101500000001,\n      "ehb": 495.66578,\n      "ttm": 584.3492799999985,\n      "tt200m": 21234.70981,\n      "registeredAt": "2020-10-13T17:23:56.794Z",\n      "updatedAt": "2022-10-31T05:28:14.490Z",\n      "lastChangedAt": "2022-10-29T05:27:05.665Z",\n      "lastImportedAt": "2022-10-26T04:15:29.869Z"\n    },\n    "history": [\n      {\n        "value": 850,\n        "date": "2021-01-31T23:52:29.770Z"\n      },\n      {\n        "value": 847,\n        "date": "2021-01-31T23:13:15.944Z"\n      },\n\n      {\n        "value": 552,\n        "date": "2021-01-25T05:10:09.834Z"\n      }\n    ]\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"create-competition"},"Create Competition"),(0,l.kt)(i.Z,{verb:"POST",path:"/competitions",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Creates a new competition. Returns the new ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-competition-with-participations"},"CompetitionWithParticipations")," object, and the secret verification code to manage it."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"title"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's title.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's metric.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"startsAt"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's start date.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endsAt"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's end date.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"groupId"),(0,l.kt)("td",{parentName:"tr",align:null},"integer?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's host group ID.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"groupVerificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's host group's verification code.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"participants"),(0,l.kt)("td",{parentName:"tr",align:null},"string[]?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The usernames of all the starting participants.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"teams"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#object-team"},"Team"),"[]?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's starting teams.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The parameters ",(0,l.kt)("inlineCode",{parentName:"p"},"groupId"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"participants")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"teams")," are mutually exclusive."),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"groupid")," is provided, this endpoint will create a classic competition with all members of that group as participants."),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"participants")," is provided (and ",(0,l.kt)("inlineCode",{parentName:"li"},"groupId")," isn't), this endpoint will create a classic competition with all those participants included."),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"teams")," is provided, this endpoint will create a team competition with all those participants included. (Also accepts ",(0,l.kt)("inlineCode",{parentName:"li"},"groupId")," as a way to link this competition to the group.)"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/competitions \\\n -H "Content-type: application/json" \\\n -d \'{\n    "title": "Smithing SOTW",\n    "metric": "smithing",\n    "startsAt": "2022-12-19T10:00:00.000Z",\n    "endsAt": "2022-12-26T10:00:00.000Z",\n    "participants": ["psikoi", "usbc", "sethmare"]\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, Metric } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst newCompetition = await client.competitions.createCompetition({\n  title: 'Smithing SOTW',\n  metric: Metric.SMITHING,\n  startsAt: '2022-12-19T10:00:00.000Z',\n  endsAt: '2022-12-26T10:00:00.000Z',\n  participants: ['psikoi', 'usbc', 'sethmare']\n});\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "competition": {\n    "id": 7,\n    "title": "Smithing SOTW",\n    "metric": "smithing",\n    "type": "classic",\n    "startsAt": "2022-12-19T10:00:00.000Z",\n    "endsAt": "2022-12-26T10:00:00.000Z",\n    "groupId": null,\n    "score": 0,\n    "createdAt": "2022-11-01T00:46:24.688Z",\n    "updatedAt": "2022-11-01T00:46:24.688Z",\n    "participations": [\n      {\n        "playerId": 4,\n        "competitionId": 7,\n        "teamName": null,\n        "createdAt": "2022-11-01T00:46:24.688Z",\n        "updatedAt": "2022-11-01T00:46:24.688Z",\n        "player": {\n          "id": 4,\n          "username": "psikoi",\n          "displayName": "psikoi",\n          "type": "regular",\n          "build": "main",\n          "country": null,\n          "status": "active",\n          "patron": false,\n          "exp": 300517988,\n          "ehp": 741.6783699999996,\n          "ehb": 259.4992700000001,\n          "ttm": 355.1258500000004,\n          "tt200m": 12782.74185,\n          "registeredAt": "2022-10-20T11:48:37.873Z",\n          "updatedAt": "2022-10-20T11:48:39.723Z",\n          "lastChangedAt": "2022-10-20T11:48:39.680Z",\n          "lastImportedAt": null\n        }\n      },\n      {\n        "playerId": 499,\n        "competitionId": 7,\n        "teamName": null,\n        "createdAt": "2022-11-01T00:46:24.688Z",\n        "updatedAt": "2022-11-01T00:46:24.688Z",\n        "player": {\n          "id": 499,\n          "username": "usbc",\n          "displayName": "usbc",\n          "type": "ultimate",\n          "build": "lvl3",\n          "country": null,\n          "status": "active",\n          "patron": false,\n          "exp": 131601975,\n          "ehp": 531.3233600000003,\n          "ehb": 0,\n          "ttm": 565.8498199999995,\n          "tt200m": 12993.09686,\n          "registeredAt": "2022-10-28T18:08:40.816Z",\n          "updatedAt": "2022-10-28T18:08:53.472Z",\n          "lastChangedAt": "2022-10-28T18:08:51.234Z",\n          "lastImportedAt": "2022-10-28T18:08:53.472Z"\n        }\n      },\n      {\n        "playerId": 500,\n        "competitionId": 7,\n        "teamName": null,\n        "createdAt": "2022-11-01T00:46:24.688Z",\n        "updatedAt": "2022-11-01T00:46:24.688Z",\n        "player": {\n          "id": 500,\n          "username": "sethmare",\n          "displayName": "sethmare",\n          "type": "unknown",\n          "build": "main",\n          "country": null,\n          "status": "active",\n          "patron": false,\n          "exp": 0,\n          "ehp": 0,\n          "ehb": 0,\n          "ttm": 0,\n          "tt200m": 0,\n          "registeredAt": "2022-11-01T00:46:24.600Z",\n          "updatedAt": "2022-11-01T00:46:24.600Z",\n          "lastChangedAt": null,\n          "lastImportedAt": null\n        }\n      }\n    ],\n    "participantCount": 3\n  },\n  "verificationCode": "251-676-488"\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"edit-competition"},"Edit Competition"),(0,l.kt)(i.Z,{verb:"PUT",path:"/competitions/:id",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Edits an existing competition. Returns the updated ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-competition-with-participations"},"CompetitionWithParticipations")," object."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"title"),(0,l.kt)("td",{parentName:"tr",align:null},"string?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's title.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric"),"?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's metric.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"startsAt"),(0,l.kt)("td",{parentName:"tr",align:null},"date?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's start date.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endsAt"),(0,l.kt)("td",{parentName:"tr",align:null},"date?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's end date.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"participants"),(0,l.kt)("td",{parentName:"tr",align:null},"string[]?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The usernames of all the new participants.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"teams"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#object-team"},"Team"),"[]?"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's new teams.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Only the fields provided in the body params are updated.")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"The participants/teams list provided will replace the existing one. To add participants to an existing competition, please check out ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-endpoints#add-participants"},"Add Participants"),", or to add participants to an existing competition, please check out ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-endpoints#add-teams"},"Add Teams"),".")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X PUT https://api.wiseoldman.net/v2/competitions/123 \\\n -H "Content-type: application/json" \\\n -d \'{\n    "title": "\ud83d\udd28 Smithing SOTW",\n    "endsAt": "2022-12-30T10:00:00.000Z",\n    "participants": ["psikoi", "usbc", "sethmare", "boom"],\n    "verificationCode": "466-183-586"\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst updatedCompetition = await client.competitions.editCompetition(\n  123,\n  {\n    title: '\ud83d\udd28 Smithing SOTW',\n    endsAt: '2022-12-30T10:00:00.000Z',\n    participants: ['psikoi', 'usbc', 'sethmare', 'boom']\n  },\n  '466-183-586'\n);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 7,\n  "title": "\ud83d\udd28 Smithing SOTW",\n  "metric": "smithing",\n  "type": "classic",\n  "startsAt": "2022-12-19T10:00:00.000Z",\n  "endsAt": "2022-12-30T10:00:00.000Z",\n  "groupId": null,\n  "score": 0,\n  "createdAt": "2022-11-01T00:46:24.688Z",\n  "updatedAt": "2022-11-01T00:54:33.949Z",\n  "participations": [\n    {\n      "playerId": 4,\n      "competitionId": 7,\n      "teamName": null,\n      "createdAt": "2022-11-01T00:46:24.688Z",\n      "updatedAt": "2022-11-01T00:46:24.688Z",\n      "player": {\n        "id": 4,\n        "username": "psikoi",\n        "displayName": "psikoi",\n        "type": "regular",\n        "build": "main",\n        "country": null,\n        "status": "active",\n        "patron": false,\n        "exp": 300517988,\n        "ehp": 741.6783699999996,\n        "ehb": 259.4992700000001,\n        "ttm": 355.1258500000004,\n        "tt200m": 12782.74185,\n        "registeredAt": "2022-10-20T11:48:37.873Z",\n        "updatedAt": "2022-10-20T11:48:39.723Z",\n        "lastChangedAt": "2022-10-20T11:48:39.680Z",\n        "lastImportedAt": null\n      }\n    },\n    {\n      "playerId": 499,\n      "competitionId": 7,\n      "teamName": null,\n      "createdAt": "2022-11-01T00:46:24.688Z",\n      "updatedAt": "2022-11-01T00:46:24.688Z",\n      "player": {\n        "id": 499,\n        "username": "usbc",\n        "displayName": "usbc",\n        "type": "ultimate",\n        "build": "lvl3",\n        "country": null,\n        "status": "active",\n        "patron": false,\n        "exp": 131601975,\n        "ehp": 531.3233600000003,\n        "ehb": 0,\n        "ttm": 565.8498199999995,\n        "tt200m": 12993.09686,\n        "registeredAt": "2022-10-28T18:08:40.816Z",\n        "updatedAt": "2022-10-28T18:08:53.472Z",\n        "lastChangedAt": "2022-10-28T18:08:51.234Z",\n        "lastImportedAt": "2022-10-28T18:08:53.472Z"\n      }\n    },\n    {\n      "playerId": 500,\n      "competitionId": 7,\n      "teamName": null,\n      "createdAt": "2022-11-01T00:46:24.688Z",\n      "updatedAt": "2022-11-01T00:46:24.688Z",\n      "player": {\n        "id": 500,\n        "username": "sethmare",\n        "displayName": "sethmare",\n        "type": "regular",\n        "build": "main",\n        "country": null,\n        "status": "active",\n        "patron": false,\n        "exp": 160902392,\n        "ehp": 502.6322099999998,\n        "ehb": 173.86025,\n        "ttm": 511.1484299999993,\n        "tt200m": 13021.78801,\n        "registeredAt": "2022-11-01T00:46:24.600Z",\n        "updatedAt": "2022-11-01T00:46:27.957Z",\n        "lastChangedAt": "2022-11-01T00:46:26.391Z",\n        "lastImportedAt": "2022-11-01T00:46:27.957Z"\n      }\n    },\n    {\n      "playerId": 501,\n      "competitionId": 7,\n      "teamName": null,\n      "createdAt": "2022-11-01T00:54:33.962Z",\n      "updatedAt": "2022-11-01T00:54:33.962Z",\n      "player": {\n        "id": 501,\n        "username": "boom",\n        "displayName": "boom",\n        "type": "unknown",\n        "build": "main",\n        "country": null,\n        "status": "active",\n        "patron": false,\n        "exp": 0,\n        "ehp": 0,\n        "ehb": 0,\n        "ttm": 0,\n        "tt200m": 0,\n        "registeredAt": "2022-11-01T00:54:33.935Z",\n        "updatedAt": "2022-11-01T00:54:33.935Z",\n        "lastChangedAt": null,\n        "lastImportedAt": null\n      }\n    }\n  ],\n  "participantCount": 4\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"delete-competition"},"Delete Competition"),(0,l.kt)(i.Z,{verb:"DELETE",path:"/competitions/:id",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Delete an existing competition."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"This action is irreversible. Once a competition has been deleted, it cannot be easily restored.")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X DELETE https://api.wiseoldman.net/v2/competitions/123 \\\n -H "Content-type: application/json" \\\n -d \'{\n    "verificationCode": "759-236-892",\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nawait client.competitions.deleteCompetition(123, '759-236-892');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "Successfully deleted competition: \ud83d\udd28 Smithing SOTW"\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"add-participants"},"Add Participants"),(0,l.kt)(i.Z,{verb:"POST",path:"/competitions/:id/participants",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Adds all (valid) given participants to a competition, ignoring duplicates."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"participants"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The usernames of the new participants.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/competitions/123/participants \\\n -H "Content-type: application/json" \\\n -d \'{\n    "verificationCode": "759-236-892",\n    "participants": ["rro", "alexsuperfly", "enriath"]\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nawait client.competitions.addParticipants(123, ['rro', 'alexsuperfly', 'enriath'], '759-236-892');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "count": 3,\n  "message": "Successfully added 3 participants."\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"remove-participants"},"Remove Participants"),(0,l.kt)(i.Z,{verb:"DELETE",path:"/competitions/:id/participants",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Remove all given usernames from a competition, ignoring usernames that aren't competing."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"participants"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The usernames of the participants to remove.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X DELETE https://api.wiseoldman.net/v2/competitions/123/participants \\\n -H "Content-type: application/json" \\\n -d \'{\n    "verificationCode": "759-236-892",\n    "participants": ["rro", "psikoi"]\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nawait client.competitions.removeParticipants(123, ['rro', 'psikoi'], '759-236-892');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "count": 2,\n  "message": "Successfully removed 2 participants."\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"add-teams"},"Add Teams"),(0,l.kt)(i.Z,{verb:"POST",path:"/competitions/:id/teams",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Adds all (valid) given teams to a team competition, ignoring duplicates."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"teams"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#object-team"},"Team"),"[]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The new teams to add.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/competitions/123/teams \\\n -H "Content-type: application/json" \\\n -d \'{\n    "verificationCode": "759-236-892",\n    "teams": [\n        {\n          "name": "Warriors",\n          "participants": ["rro", "psikoi", "boom"]\n        },\n        {\n          "name": "Soldiers",\n          "participants": ["boom", "jakesterwars", "sethmare"]\n        }\n    ]\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nawait client.competitions.addTeams(\n  123,\n  [\n    {\n      name: 'Warriors',\n      participants: ['rro', 'psikoi', 'boom']\n    },\n    {\n      name: 'Soldiers',\n      participants: ['boom', 'jakesterwars', 'sethmare']\n    }\n  ],\n  '759-236-892'\n);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "count": 6,\n  "message": "Successfully added 6 participants."\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"remove-teams"},"Remove Teams"),(0,l.kt)(i.Z,{verb:"DELETE",path:"/competitions/:id/teams",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Remove all given team names from a competition, ignoring team names that don't exist."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"teamNames"),(0,l.kt)("td",{parentName:"tr",align:null},"string[]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The names of the teams to remove.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X DELETE https://api.wiseoldman.net/v2/competitions/123/teams \\\n -H "Content-type: application/json" \\\n -d \'{\n    "verificationCode": "759-236-892",\n    "teamNames": ["Warriors"]\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nawait client.competitions.removeTeams(123, ['Warriors'], '759-236-892');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "count": 3,\n  "message": "Successfully removed 3 participants."\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"update-all-outdated-participants"},"Update All (Outdated) Participants"),(0,l.kt)(i.Z,{verb:"POST",path:"/competitions/:id/update-all",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Attempts to update any outdated competition participants.."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Competition participants are considered outdated when:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Competition is ending in < 6h or started < 6h ago ",(0,l.kt)("strong",{parentName:"p"},"AND")," player hasn't been updated in over 1h."),(0,l.kt)("p",{parentName:"li"},"Or")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Player hasn't been updated in over 24h")))),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},'This action adds every outdated participant to an "update queue", and our servers try to update players in this queue one by one, with a delay in between each. For each player in the queue, we attempt to update it up to 3 times, with 30s in between each attempt.'),(0,l.kt)("p",{parentName:"admonition"},"Please note that we are dependant on the OSRS hiscores functioning correctly, and therefor this endpoint does NOT guarantee the players will be updated, it only guarantees that it will at least try to update them, up to 3 times.")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"verificationCode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition's verification code (Or the host group's verification code, if linked to a group).")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(r.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/competitions/123/update-all \\\n -H "Content-type: application/json" \\\n -d \'{\n    "verificationCode": "759-236-892"\n}\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nawait client.competitions.updateAll(123, '759-236-892');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "6 outdated (updated > 24h ago) players are being updated. This can take up to a few minutes."\n}\n')))}k.isMDXComponent=!0}}]);