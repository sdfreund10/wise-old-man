"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[870],{6510:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(6010),l=a(7294);const r={verb:"verb_Nwub",path:"path_stP6",post:"post_PxBq",delete:"delete_r1td",get:"get_DBE8",put:"put_QdXb",patch:"patch_xPbH"},i=e=>{const{verb:t,path:a}=e;return l.createElement("div",null,l.createElement("span",{className:(0,n.Z)(r.verb,r[t.toLowerCase()])},t),l.createElement("span",{className:r.path},a))}},930:(e,t,a)=>{a.d(t,{Z:()=>b});var n=a(7294),l=a(814),r=a(7462),i=a(6010),s=a(2389),p=a(7392),o=a(7094),m=a(2466);const u="tabList__CuJ",d="tabItem_LNqP";function c(e){var t;const{lazy:a,block:l,defaultValue:s,values:c,groupId:g,className:h}=e,k=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),N=c??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),b=(0,p.l)(N,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===s?s:s??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==v&&!N.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${N.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:y}=(0,o.U)(),[C,T]=(0,n.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:E}=(0,m.o5)();if(null!=g){const e=f[g];null!=e&&e!==C&&N.some((t=>t.value===e))&&T(e)}const Z=e=>{const t=e.currentTarget,a=w.indexOf(t),n=N[a].value;n!==C&&(E(t),T(n),null!=g&&y(g,String(n)))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;a=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;a=w[t]??w[w.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,i.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},h)},N.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>w.push(e),onKeyDown:x,onFocus:Z,onClick:Z},l,{className:(0,i.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":C===t})}),a??t)}))),a?(0,n.cloneElement)(k.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function g(e){const t=(0,s.Z)();return n.createElement(c,(0,r.Z)({key:String(t)},e))}const h="tabItem_Ymn6";function k(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(h,l),hidden:a},t)}const N={curl:"cURL",javascript:"JavaScript / TypeScript"},b=e=>{const{children:t}=e,a=t.map((e=>{const t=e.props.children.props;return{language:t.className.replace("language-",""),code:t.children}}));return n.createElement(g,{groupId:"tabbed-code-block"},a.map((e=>n.createElement(k,{value:e.language,label:N[e.language]},n.createElement(l.Z,{language:e.language},e.code)))))}},3899:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var n=a(7462),l=(a(7294),a(3905)),r=a(6510),i=a(930);const s={title:"Name Change Endpoints",sidebar_position:2},p=void 0,o={unversionedId:"api/name-changes/name-endpoints",id:"api/name-changes/name-endpoints",title:"Name Change Endpoints",description:"Related Endpoints",source:"@site/docs/api/name-changes/name-endpoints.mdx",sourceDirName:"api/name-changes",slug:"/api/name-changes/name-endpoints",permalink:"/api/name-changes/name-endpoints",draft:!1,editUrl:"https://github.com/wise-old-man/wise-old-man/tree/master/docs/docs/api/name-changes/name-endpoints.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Name Change Endpoints",sidebar_position:2},sidebar:"api",previous:{title:"Name Change Types & Entities",permalink:"/api/name-changes/name-type-definitions"},next:{title:"Efficiency API",permalink:"/api/efficiency"}},m={},u=[{value:"Related Endpoints",id:"related-endpoints",level:2},{value:"Search Name Changes",id:"search-name-changes",level:2},{value:"Submit Name Change",id:"submit-name-change",level:2}],d={toc:u};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"related-endpoints"},"Related Endpoints"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/players/player-endpoints#get-player-name-changes"},"Players - Get Player Name Changes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/groups/group-endpoints#get-group-name-changes"},"Groups - Get Group Name Changes"))),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"search-name-changes"},"Search Name Changes"),(0,l.kt)(r.Z,{verb:"GET",path:"/names",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Searches for name changes that match a name and/or status filter. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/name-changes/name-type-definitions#object-name-change"},"NameChange")," objects."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The partial username for the player you're trying to search for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"status"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/name-changes/name-type-definitions#enum-name-change-status"},"NameChangeStatus")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The status to filter the results by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination limit. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination offset. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(i.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/names?username=zezi&status=pending&limit=2 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, NameChangeStatus } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst nameChanges = await client.nameChanges.searchNameChanges(\n  { username: 'zezi', status: NameChangeStatus.PENDING },\n  { limit: 2 }\n);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 122524,\n    "playerId": 534993,\n    "oldName": "iicyc",\n    "newName": "ZezimaNite",\n    "status": "pending",\n    "reviewContext": {\n      "reason": "excessive_gains";\n      "ehpDiff": 407;\n      "ehbDiff": 204;\n      "hoursDiff": 596;\n    }\n    "resolvedAt": null,\n    "updatedAt": "2022-10-13T18:01:17.159Z",\n    "createdAt": "2022-10-13T18:01:17.159Z"\n  },\n  {\n    "id": 33296,\n    "playerId": 63821,\n    "oldName": "Zezime54",\n    "newName": "zezi1meme",\n    "status": "pending",\n    "reviewContext": null,\n    "resolvedAt": null,\n    "updatedAt": "2021-10-25T11:50:31.581Z",\n    "createdAt": "2021-10-25T11:50:31.581Z"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"submit-name-change"},"Submit Name Change"),(0,l.kt)(r.Z,{verb:"POST",path:"/names",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Submits a name change request between two usernames (old and new). Returns a (pending) ",(0,l.kt)("a",{parentName:"p",href:"/api/name-changes/name-type-definitions#object-name-change"},"NameChange")," object."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Body Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oldName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},'The player\'s "previous" username.')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"newName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},'The player\'s "new" username.')))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(i.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/names \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "oldName": "psikoi",\n    "newName": "zezima",\n  }\'\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst newNameChange = await client.nameChanges.submitNameChange('psikoi', 'zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 63421,\n  "playerId": 2,\n  "oldName": "psikoi",\n  "newName": "zezima",\n  "status": "pending",\n  "reviewContext": null,\n  "resolvedAt": null,\n  "updatedAt": "2022-10-25T11:50:31.581Z",\n  "createdAt": "2022-10-25T11:50:31.581Z"\n}\n')))}c.isMDXComponent=!0}}]);