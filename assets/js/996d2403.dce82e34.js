"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[721],{6510:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(6010),l=n(7294);const r={verb:"verb_Nwub",path:"path_stP6",post:"post_PxBq",delete:"delete_r1td",get:"get_DBE8",put:"put_QdXb",patch:"patch_xPbH"},p=e=>{const{verb:t,path:n}=e;return l.createElement("div",null,l.createElement("span",{className:(0,a.Z)(r.verb,r[t.toLowerCase()])},t),l.createElement("span",{className:r.path},n))}},930:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(7294),l=n(814),r=n(7462),p=n(6010),i=n(2389),s=n(7392),m=n(7094),o=n(2466);const d="tabList__CuJ",u="tabItem_LNqP";function k(e){var t;const{lazy:n,block:l,defaultValue:i,values:k,groupId:c,className:g}=e,N=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=k??N.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,s.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===i?i:i??(null==(t=N.find((e=>e.props.default)))?void 0:t.props.value)??N[0].props.value;if(null!==b&&!h.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:T,setTabGroupChoices:v}=(0,m.U)(),[f,C]=(0,a.useState)(b),P=[],{blockElementScrollPositionUntilNextRender:Z}=(0,o.o5)();if(null!=c){const e=T[c];null!=e&&e!==f&&h.some((t=>t.value===e))&&C(e)}const A=e=>{const t=e.currentTarget,n=P.indexOf(t),a=h[n].value;a!==f&&(Z(t),C(a),null!=c&&v(c,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=P.indexOf(e.currentTarget)+1;n=P[t]??P[0];break}case"ArrowLeft":{const t=P.indexOf(e.currentTarget)-1;n=P[t]??P[P.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,p.Z)("tabs-container",d)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":l},g)},h.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,key:t,ref:e=>P.push(e),onKeyDown:E,onFocus:A,onClick:A},l,{className:(0,p.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":f===t})}),n??t)}))),n?(0,a.cloneElement)(N.filter((e=>e.props.value===f))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},N.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==f})))))}function c(e){const t=(0,i.Z)();return a.createElement(k,(0,r.Z)({key:String(t)},e))}const g="tabItem_Ymn6";function N(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,p.Z)(g,l),hidden:n},t)}const h={curl:"cURL",javascript:"JavaScript / TypeScript"},y=e=>{const{children:t}=e,n=t.map((e=>{const t=e.props.children.props;return{language:t.className.replace("language-",""),code:t.children}}));return a.createElement(c,{groupId:"tabbed-code-block"},n.map((e=>a.createElement(N,{value:e.language,label:h[e.language]},a.createElement(l.Z,{language:e.language},e.code)))))}},8241:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>m,toc:()=>d});var a=n(7462),l=(n(7294),n(3905)),r=n(6510),p=n(930);const i={title:"Player Endpoints",sidebar_position:2},s=void 0,m={unversionedId:"api/players/player-endpoints",id:"api/players/player-endpoints",title:"Player Endpoints",description:"Search Players",source:"@site/docs/api/players/player-endpoints.mdx",sourceDirName:"api/players",slug:"/api/players/player-endpoints",permalink:"/api/players/player-endpoints",draft:!1,editUrl:"https://github.com/wise-old-man/wise-old-man/tree/master/docs/docs/api/players/player-endpoints.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Player Endpoints",sidebar_position:2},sidebar:"api",previous:{title:"Player Types & Entities",permalink:"/api/players/player-type-definitions"},next:{title:"Groups API",permalink:"/api/groups"}},o={},d=[{value:"Search Players",id:"search-players",level:2},{value:"Update a Player",id:"update-a-player",level:2},{value:"Assert Player Type",id:"assert-player-type",level:2},{value:"Get Player Details",id:"get-player-details",level:2},{value:"Get Player Details (by ID)",id:"get-player-details-by-id",level:2},{value:"Get Player Achievements",id:"get-player-achievements",level:2},{value:"Get Player Achievement Progress",id:"get-player-achievement-progress",level:2},{value:"Get Player Competition Participations",id:"get-player-competition-participations",level:2},{value:"Get Player Competition Standings",id:"get-player-competition-standings",level:2},{value:"Get Player Group Memberships",id:"get-player-group-memberships",level:2},{value:"Get Player Gains",id:"get-player-gains",level:2},{value:"Get Player Records",id:"get-player-records",level:2},{value:"Get Player Snapshots",id:"get-player-snapshots",level:2},{value:"Get Player Snapshots Timeline",id:"get-player-snapshots-timeline",level:2},{value:"Get Player Name Changes",id:"get-player-name-changes",level:2},{value:"Get Player Archives",id:"get-player-archives",level:2}],u={toc:d};function k(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"search-players"},"Search Players"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/search",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Searches players by partial username. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player"},"Player")," objects."),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The partial username for the player you're trying to search for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination limit. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination offset. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/search?username=zezi&limit=2 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst players = await client.players.searchPlayers('zezi', { limit: 2 });\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 151063,\n    "username": "zezimas bro",\n    "displayName": "Zezimas bro",\n    "type": "regular",\n    "build": "main",\n    "country": null,\n    "status": "active",\n    "patron": false,\n    "exp": 330940032,\n    "ehp": 1057.05253,\n    "ehb": 126.50192,\n    "ttm": 0,\n    "tt200m": 12467.36769,\n    "registeredAt": "2021-01-29T01:18:41.641Z",\n    "updatedAt": "2022-10-01T17:02:03.360Z",\n    "lastChangedAt": "2022-10-01T17:02:03.129Z",\n    "lastImportedAt": null\n  },\n  {\n    "id": 322795,\n    "username": "zezimas main",\n    "displayName": "Zezimas Main",\n    "type": "ironman",\n    "build": "main",\n    "country": null,\n    "status": "active",\n    "patron": false,\n    "exp": 164428785,\n    "ehp": 800.36287,\n    "ehb": 258.43421,\n    "ttm": 963.15034,\n    "tt200m": 21652.44844,\n    "registeredAt": "2021-07-30T20:36:49.447Z",\n    "updatedAt": "2022-09-22T17:47:38.096Z",\n    "lastChangedAt": "2022-09-22T17:47:37.411Z",\n    "lastImportedAt": "2022-09-22T17:47:38.096Z"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"update-a-player"},"Update a Player"),(0,l.kt)(r.Z,{verb:"POST",path:"/players/:username",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Tracks or updates a player. Returns a ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player-details"},"PlayerDetails")," object on success, which includes their latest snapshot."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/players/zezima \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst playerDetails = await client.players.updatePlayer('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1135,\n  "username": "zezima",\n  "displayName": "Zezima",\n  "type": "regular",\n  "build": "main",\n  "country": null,\n  "status": "active",\n  "patron": false,\n  "exp": 27957906,\n  "ehp": 118.1123000000007,\n  "ehb": 0,\n  "ttm": 891.24136,\n  "tt200m": 13406.30792,\n  "registeredAt": "2020-04-22T18:54:52.487Z",\n  "updatedAt": "2022-10-27T11:44:11.564Z",\n  "lastChangedAt": "2021-04-17T15:57:49.039Z",\n  "lastImportedAt": "2022-10-23T18:24:22.792Z",\n  "combatLevel": 93,\n  "archive": null,\n  "annotations": [\n    {\n      "playerId": 1135,\n      "type": "opt_out",\n      "createdAt": "2025-01-13T17:08:35.534Z"\n    }\n  ],\n  "latestSnapshot": {\n    "id": 68052294,\n    "playerId": 1135,\n    "createdAt": "2022-10-27T11:44:11.057Z",\n    "importedAt": null,\n    "data": {\n      "skills": {\n        "overall": {\n          "metric": "overall",\n          "experience": 27957906,\n          "rank": 948821,\n          "level": 1422,\n          "ehp": 118.1123000000007\n        }\n        // ... etc for all skills\n      },\n      "bosses": {\n        "abyssal_sire": {\n          "metric": "abyssal_sire",\n          "kills": -1,\n          "rank": -1,\n          "ehb": 0\n        }\n        // ... etc for all bosses\n      },\n      "activities": {\n        "bounty_hunter_hunter": {\n          "metric": "bounty_hunter_hunter",\n          "score": -1,\n          "rank": -1\n        }\n        // ... etc for all activities\n      },\n      "computed": {\n        "ehp": {\n          "metric": "ehp",\n          "value": 118.1123000000007,\n          "rank": 289382\n        }\n        // ... etc for all computed metrics\n      }\n    }\n  }\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"assert-player-type"},"Assert Player Type"),(0,l.kt)(r.Z,{verb:"POST",path:"/players/:username/assert-type",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Asserts (and attempts to fix, if necessary) a player's game-mode type. Returns the updated ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player"},"Player")," and an indication of whether the type was changed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST https://api.wiseoldman.net/v2/players/zezima/assert-type \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst { player, changed } = await client.players.assertPlayerType('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "player": {\n    "id": 1135,\n    "username": "zezima",\n    "displayName": "Zezima",\n    "type": "regular",\n    "build": "main",\n    "country": null,\n    "status": "active",\n    "patron": false,\n    "exp": 27957906,\n    "ehp": 118.1123000000007,\n    "ehb": 0,\n    "ttm": 891.24136,\n    "tt200m": 13406.30792,\n    "registeredAt": "2020-04-22T18:54:52.487Z",\n    "updatedAt": "2022-10-27T11:44:11.564Z",\n    "lastChangedAt": "2021-04-17T15:57:49.039Z",\n    "lastImportedAt": "2022-10-23T18:24:22.792Z"\n  },\n  "changed": false\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-details"},"Get Player Details"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches a player's details. Returns a ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player-details"},"PlayerDetails")," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst playerDetails = await client.players.getPlayerDetails('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1135,\n  "username": "zezima",\n  "displayName": "Zezima",\n  "type": "regular",\n  "build": "main",\n  "country": null,\n  "status": "active",\n  "patron": false,\n  "exp": 27957906,\n  "ehp": 118.1123000000007,\n  "ehb": 0,\n  "ttm": 891.24136,\n  "tt200m": 13406.30792,\n  "registeredAt": "2020-04-22T18:54:52.487Z",\n  "updatedAt": "2022-10-27T11:44:11.564Z",\n  "lastChangedAt": "2021-04-17T15:57:49.039Z",\n  "lastImportedAt": "2022-10-23T18:24:22.792Z",\n  "combatLevel": 93,\n  "archive": null,\n  "annotations": [\n    {\n      "playerId": 1135,\n      "type": "opt_out",\n      "createdAt": "2025-01-13T17:08:35.534Z"\n    }\n  ],\n  "latestSnapshot": {\n    "id": 68052294,\n    "playerId": 1135,\n    "createdAt": "2022-10-27T11:44:11.057Z",\n    "importedAt": null,\n    "data": {\n      "skills": {\n        "overall": {\n          "metric": "overall",\n          "experience": 27957906,\n          "rank": 948821,\n          "level": 1422,\n          "ehp": 118.1123000000007\n        }\n        // ... etc for all skills\n      },\n      "bosses": {\n        "abyssal_sire": {\n          "metric": "abyssal_sire",\n          "kills": -1,\n          "rank": -1,\n          "ehb": 0\n        }\n        // ... etc for all bosses\n      },\n      "activities": {\n        "bounty_hunter_hunter": {\n          "metric": "bounty_hunter_hunter",\n          "score": -1,\n          "rank": -1\n        }\n        // ... etc for all activities\n      },\n      "computed": {\n        "ehp": {\n          "metric": "ehp",\n          "value": 118.1123000000007,\n          "rank": 289382\n        }\n        // ... etc for all computed metrics\n      }\n    }\n  }\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-details-by-id"},"Get Player Details (by ID)"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/id/:id",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches a player's details by their ID. Returns a ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player-details"},"PlayerDetails")," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's ID.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/id/123 \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst playerDetails = await client.players.getPlayerDetailsById(123);\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 123,\n  "username": "zezima",\n  "displayName": "Zezima",\n  "type": "regular",\n  "build": "main",\n  "country": null,\n  "status": "active",\n  "patron": false,\n  "exp": 27957906,\n  "ehp": 118.1123000000007,\n  "ehb": 0,\n  "ttm": 891.24136,\n  "tt200m": 13406.30792,\n  "registeredAt": "2020-04-22T18:54:52.487Z",\n  "updatedAt": "2022-10-27T11:44:11.564Z",\n  "lastChangedAt": "2021-04-17T15:57:49.039Z",\n  "lastImportedAt": "2022-10-23T18:24:22.792Z",\n  "combatLevel": 93,\n  "archive": null,\n  "latestSnapshot": {\n    "id": 68052294,\n    "playerId": 1135,\n    "createdAt": "2022-10-27T11:44:11.057Z",\n    "importedAt": null,\n    "data": {\n      "skills": {\n        "overall": {\n          "metric": "overall",\n          "experience": 27957906,\n          "rank": 948821,\n          "level": 1422,\n          "ehp": 118.1123000000007\n        }\n        // ... etc for all skills\n      },\n      "bosses": {\n        "abyssal_sire": {\n          "metric": "abyssal_sire",\n          "kills": -1,\n          "rank": -1,\n          "ehb": 0\n        }\n        // ... etc for all bosses\n      },\n      "activities": {\n        "bounty_hunter_hunter": {\n          "metric": "bounty_hunter_hunter",\n          "score": -1,\n          "rank": -1\n        }\n        // ... etc for all activities\n      },\n      "computed": {\n        "ehp": {\n          "metric": "ehp",\n          "value": 118.1123000000007,\n          "rank": 289382\n        }\n        // ... etc for all computed metrics\n      }\n    }\n  }\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-achievements"},"Get Player Achievements"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/achievements",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches a player's current achievements. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-achievement"},"Achievement")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/achievements \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst achievements = await client.players.getPlayerAchievements('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "playerId": 1135,\n    "name": "500 Wintertodt kills",\n    "metric": "wintertodt",\n    "threshold": 500,\n    "createdAt": "2021-04-17T15:57:49.146Z",\n    "accuracy": 195764,\n    "measure": "kills"\n  },\n  {\n    "playerId": 1135,\n    "name": "99 Firemaking",\n    "metric": "firemaking",\n    "threshold": 13034431,\n    "createdAt": "2018-08-16T23:23:10.000Z",\n    "accuracy": 938687,\n    "measure": "experience"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-achievement-progress"},"Get Player Achievement Progress"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/achievements/progress",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches a player's current progress towards every possible achievement. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-achievement-progress"},"AchievementProgress")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/achievements/progress \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst achievementsProgress = await client.players.getPlayerAchievementProgress('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "name": "99 Agility",\n    "metric": "agility",\n    "measure": "experience",\n    "threshold": 13034431,\n    "playerId": 1135,\n    "currentValue": 738591,\n    "absoluteProgress": 0.0567,\n    "relativeProgress": 0.0567,\n    "createdAt": null,\n    "accuracy": -1\n  },\n  {\n    "name": "50m Agility",\n    "metric": "agility",\n    "measure": "experience",\n    "threshold": 50000000,\n    "playerId": 1135,\n    "currentValue": 738591,\n    "absoluteProgress": 0.0148,\n    "relativeProgress": 0,\n    "createdAt": null,\n    "accuracy": -1\n  },\n  {\n    "name": "100m Agility",\n    "metric": "agility",\n    "measure": "experience",\n    "threshold": 100000000,\n    "playerId": 1135,\n    "currentValue": 738591,\n    "absoluteProgress": 0.0074,\n    "relativeProgress": 0,\n    "createdAt": null,\n    "accuracy": -1\n  },\n  {\n    "name": "200m Agility",\n    "metric": "agility",\n    "measure": "experience",\n    "threshold": 200000000,\n    "playerId": 1135,\n    "currentValue": 738591,\n    "absoluteProgress": 0.0037,\n    "relativeProgress": 0,\n    "createdAt": null,\n    "accuracy": -1\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-competition-participations"},"Get Player Competition Participations"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/competitions",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's competition participations. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-player-participation"},"PlayerParticipation")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"status"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#enum-competition-status"},"CompetitionStatus")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition status filter.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/competitions \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, CompetitionStatus } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst participations = await client.players.getPlayerCompetitions('zezima', {\n  status: CompetitionStatus.ONGOING\n});\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "playerId": 139108,\n    "competitionId": 16406,\n    "teamName": null,\n    "createdAt": "2022-10-19T20:10:14.609Z",\n    "updatedAt": "2022-10-24T00:19:46.865Z",\n    "competition": {\n      "id": 16406,\n      "title": "DCC KOS Smithing",\n      "metric": "smithing",\n      "type": "classic",\n      "startsAt": "2022-10-24T00:00:00.000Z",\n      "endsAt": "2022-10-31T00:00:00.000Z",\n      "groupId": 603,\n      "score": 448,\n      "createdAt": "2022-10-19T20:10:14.609Z",\n      "updatedAt": "2022-10-28T04:28:26.094Z",\n      "group": {\n        "id": 603,\n        "name": "DemocraCC",\n        "clanChat": "Democracc",\n        "description": "A social clan chat.",\n        "homeworld": 524,\n        "verified": true,\n        "patron": false,\n        "profileImage": null,\n        "bannerImage": null,\n        "score": 470,\n        "createdAt": "2021-01-16T17:52:13.417Z",\n        "updatedAt": "2022-10-27T04:43:44.694Z",\n        "memberCount": 131\n      },\n      "participantCount": 131\n    }\n  },\n  {\n    "playerId": 139108,\n    "competitionId": 16405,\n    "teamName": null,\n    "createdAt": "2022-10-19T20:07:46.767Z",\n    "updatedAt": "2022-10-24T00:19:46.865Z",\n    "competition": {\n      "id": 16405,\n      "title": "DCC Smithing",\n      "metric": "smithing",\n      "type": "classic",\n      "startsAt": "2022-10-24T00:00:00.000Z",\n      "endsAt": "2022-10-31T01:00:00.000Z",\n      "groupId": 603,\n      "score": 448,\n      "createdAt": "2022-10-19T20:07:46.767Z",\n      "updatedAt": "2022-10-28T04:18:39.033Z",\n      "group": {\n        "id": 603,\n        "name": "DemocraCC",\n        "clanChat": "Democracc",\n        "description": "A social clan chat.",\n        "homeworld": 524,\n        "verified": true,\n        "patron": false,\n        "profileImage": null,\n        "bannerImage": null,\n        "score": 470,\n        "createdAt": "2021-01-16T17:52:13.417Z",\n        "updatedAt": "2022-10-27T04:43:44.694Z",\n        "memberCount": 131\n      },\n      "participantCount": 131\n    }\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-competition-standings"},"Get Player Competition Standings"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/competitions/standings",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's competition standings. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/competitions/competition-type-definitions#object-player-competition-standing"},"PlayerCompetitionStanding")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"status"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/competitions/competition-type-definitions#enum-competition-status"},"CompetitionStatus")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The competition status filter.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/competitions/standings?status=ongoing \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, CompetitionStatus } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst standings = await client.players.getPlayerCompetitionStandings('zezima', {\n  status: CompetitionStatus.ONGOING\n});\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "playerId": 36994,\n    "competitionId": 16583,\n    "teamName": null,\n    "createdAt": "2022-10-24T14:16:37.339Z",\n    "updatedAt": "2022-10-28T09:53:31.638Z",\n    "progress": {\n      "gained": 4332129,\n      "start": 2097664,\n      "end": 6429793\n    },\n    "levels": {\n      "gained": 11,\n      "start": 80,\n      "end": 91\n    },\n    "rank": 1,\n    "competition": {\n      "id": 16583,\n      "title": "Skill of the Week #60: Thieving",\n      "metric": "thieving",\n      "type": "classic",\n      "startsAt": "2022-10-24T22:00:00.000Z",\n      "endsAt": "2022-10-30T22:00:00.000Z",\n      "groupId": 1088,\n      "score": 626,\n      "createdAt": "2022-10-24T14:16:37.339Z",\n      "updatedAt": "2022-10-26T20:20:05.150Z",\n      "group": {\n        "id": 1088,\n        "name": "Wild",\n        "clanChat": "Wild",\n        "description": "Clan Wild, Created from the community of The Wilderness Podcast",\n        "homeworld": 386,\n        "verified": true,\n        "patron": false,\n        "profileImage": null,\n        "bannerImage": null,\n        "score": 440,\n        "createdAt": "2021-05-04T13:03:02.851Z",\n        "updatedAt": "2022-10-25T15:46:55.761Z",\n        "memberCount": 729\n      },\n      "participantCount": 729\n    }\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-group-memberships"},"Get Player Group Memberships"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/groups",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's group memberships. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/groups/group-type-definitions#object-player-membership"},"PlayerMembership")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination limit. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination offset. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/groups \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst memberships = await client.players.getPlayerGroups('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "playerId": 4156,\n    "groupId": 139,\n    "role": "member",\n    "createdAt": "2022-08-21T20:42:18.541Z",\n    "updatedAt": "2022-08-21T20:42:18.541Z",\n    "group": {\n      "id": 139,\n      "name": "Exclusive Elite Club",\n      "clanChat": "Psikoi",\n      "description": "test",\n      "homeworld": null,\n      "verified": true,\n      "patron": false,\n      "profileImage": null,\n      "bannerImage": null,\n      "score": 330,\n      "createdAt": "2020-07-05T15:25:54.055Z",\n      "updatedAt": "2022-10-24T00:03:02.781Z",\n      "memberCount": 10\n    }\n  },\n  {\n    "playerId": 4156,\n    "groupId": 846,\n    "role": "member",\n    "createdAt": "2021-03-18T01:14:05.993Z",\n    "updatedAt": "2021-03-18T01:14:05.993Z",\n    "group": {\n      "id": 846,\n      "name": "alrighty",\n      "clanChat": "Legacy 07",\n      "description": "yes",\n      "homeworld": 313,\n      "verified": false,\n      "patron": false,\n      "profileImage": null,\n      "bannerImage": null,\n      "score": 260,\n      "createdAt": "2021-03-18T01:14:05.629Z",\n      "updatedAt": "2022-10-24T12:01:49.620Z",\n      "memberCount": 193\n    }\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-gains"},"Get Player Gains"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/gained",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's for a specific period or time range. Returns a ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player-gains"},"PlayerGains")," object."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-period"},"Period")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The duration of the gains' time range.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"startDate"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The start date of the gains' time range.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endDate"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The end date of the gains' time range.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This endpoint accepts either ",(0,l.kt)("inlineCode",{parentName:"p"},"period")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"startDate")," + ",(0,l.kt)("inlineCode",{parentName:"p"},"endDate"),".")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/gained?period=week \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, Period } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst gains = await client.players.getPlayerGains('zezima', { period: Period.WEEK });\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "startsAt": "2022-10-21T16:06:00.993Z",\n  "endsAt": "2022-10-24T00:19:46.350Z",\n  "data": {\n    "skills": {\n      "overall": {\n        "metric": "overall",\n        "experience": {\n          "gained": 90867,\n          "start": 131790911,\n          "end": 131881778\n        },\n        "ehp": {\n          "gained": 0.04787,\n          "start": 251.14464000000044,\n          "end": 251.19251000000077\n        },\n        "rank": {\n          "gained": 478,\n          "start": 308702,\n          "end": 309180\n        },\n        "level": {\n          "gained": 0,\n          "start": 1902,\n          "end": 1902\n        }\n      }\n      // ... etc for all skills\n    },\n    "bosses": {\n      "abyssal_sire": {\n        "metric": "abyssal_sire",\n        "ehb": {\n          "gained": 0,\n          "start": 0,\n          "end": 0\n        },\n        "rank": {\n          "gained": -1,\n          "start": -1,\n          "end": -1\n        },\n        "kills": {\n          "gained": 0,\n          "start": -1,\n          "end": -1\n        }\n      }\n      // ... etc for all bosses\n    },\n    "activities": {\n      "bounty_hunter_hunter": {\n        "metric": "bounty_hunter_hunter",\n        "rank": {\n          "gained": -1,\n          "start": -1,\n          "end": -1\n        },\n        "score": {\n          "gained": 0,\n          "start": -1,\n          "end": -1\n        }\n      }\n      // ... etc for all activities\n    },\n    "computed": {\n      "ehp": {\n        "metric": "ehp",\n        "value": {\n          "gained": 0.04787,\n          "start": 251.14464000000044,\n          "end": 251.19251000000077\n        },\n        "rank": {\n          "gained": 386,\n          "start": 171375,\n          "end": 171761\n        }\n      }\n      // ... etc for all computed metrics\n    }\n  }\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-records"},"Get Player Records"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/records",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's records. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/records/record-type-definitions#object-record"},"Record")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-period"},"Period")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The record's time period.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The record's metric.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/records?metric=agility \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, Metric } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst records = await client.players.getPlayerRecords('zezima', { metric: Metric.AGILITY });\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 329155,\n    "playerId": 4156,\n    "period": "year",\n    "metric": "agility",\n    "value": 279157,\n    "updatedAt": "2022-08-04T23:29:36.185Z"\n  },\n  {\n    "id": 5514369,\n    "playerId": 4156,\n    "period": "week",\n    "metric": "agility",\n    "value": 177923,\n    "updatedAt": "2022-04-10T22:40:38.833Z"\n  },\n  {\n    "id": 5514373,\n    "playerId": 4156,\n    "period": "month",\n    "metric": "agility",\n    "value": 242841,\n    "updatedAt": "2022-04-10T22:40:38.828Z"\n  },\n  {\n    "id": 5561515,\n    "playerId": 4156,\n    "period": "day",\n    "metric": "agility",\n    "value": 124105,\n    "updatedAt": "2022-04-10T22:40:38.814Z"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-snapshots"},"Get Player Snapshots"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/snapshots",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's past snapshots. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-snapshot"},"Snapshot")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-period"},"Period")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The period to filter the snapshots by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"startDate"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The minimum date for the snapshots.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endDate"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum date for the snapshots.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"limit"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination limit. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The pagination offset. See ",(0,l.kt)("a",{parentName:"td",href:"/#pagination"},"Pagination"))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This endpoint accepts either ",(0,l.kt)("inlineCode",{parentName:"p"},"period")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"startDate")," + ",(0,l.kt)("inlineCode",{parentName:"p"},"endDate"),".")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/snapshots?period=week \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, Period } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst snapshots = await client.players.getPlayerSnapshots('zezima', { period: Period.WEEK });\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 67506253,\n    "playerId": 2,\n    "createdAt": "2022-10-21T16:46:33.093Z",\n    "importedAt": null,\n    "data": {\n      "skills": {\n        "overall": {\n          "metric": "overall",\n          "experience": 300532325,\n          "rank": 61254,\n          "level": 2184\n        }\n        // ... etc for all skills\n      },\n      "bosses": {\n        "abyssal_sire": {\n          "metric": "abyssal_sire",\n          "kills": 1049,\n          "rank": 11931\n        }\n        // ... etc for all bosses\n      },\n      "activities": {\n        "bounty_hunter_hunter": {\n          "metric": "bounty_hunter_hunter",\n          "score": -1,\n          "rank": -1\n        }\n        // ... etc for all activities\n      },\n      "computed": {\n        "ehp": {\n          "metric": "ehp",\n          "value": 741.68649,\n          "rank": 40839\n        }\n        // ... etc for all computed metrics\n      }\n    }\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-snapshots-timeline"},"Get Player Snapshots Timeline"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/snapshots/timeline",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's past snapshots (as a value/date timeseries array). Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-timeline-datapoint"},"Timeline Datapoints")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metric"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-metric"},"Metric")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The record's metric.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"period"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/api/global-type-definitions#enum-period"},"Period")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The period to filter the snapshots by.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"startDate"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The minimum date for the snapshots.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endDate"),(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:null},"The maximum date for the snapshots.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This endpoint accepts either ",(0,l.kt)("inlineCode",{parentName:"p"},"period")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"startDate")," + ",(0,l.kt)("inlineCode",{parentName:"p"},"endDate"),".")),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/snapshots/timeline?metric=magic&period=week \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient, Period, Metric } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst snapshots = await client.players.getPlayerSnapshotTimeline('zezima', Metric.MAGIC, {\n  period: Period.WEEK\n});\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "value": 19314798,\n    "rank": 804785,\n    "date": "2023-06-15T06:45:08.867Z"\n  },\n  {\n    "value": 19221704,\n    "rank": 803572,\n    "date": "2023-06-14T11:13:36.000Z"\n  },\n  {\n    "value": 19219580,\n    "rank": 802829,\n    "date": "2023-06-13T23:58:48.000Z"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-name-changes"},"Get Player Name Changes"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/names",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all of the player's approved name changes. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/name-changes/name-type-definitions#object-name-change"},"NameChange")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/names \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst nameChanges = await client.players.getPlayerNames('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 126981,\n    "playerId": 300184,\n    "oldName": "KHX",\n    "newName": "chambou",\n    "status": "approved",\n    "reviewContext": null,\n    "resolvedAt": "2022-10-28T10:59:39.505Z",\n    "updatedAt": "2022-10-28T10:59:39.506Z",\n    "createdAt": "2022-10-28T10:59:17.920Z"\n  },\n  {\n    "id": 21521,\n    "playerId": 300184,\n    "oldName": "bezrobotny",\n    "newName": "KHX",\n    "status": "approved",\n    "reviewContext": null,\n    "resolvedAt": "2021-08-20T17:00:16.848Z",\n    "updatedAt": "2021-08-20T17:00:16.848Z",\n    "createdAt": "2021-08-20T16:59:23.284Z"\n  }\n]\n')),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"get-player-archives"},"Get Player Archives"),(0,l.kt)(r.Z,{verb:"GET",path:"/players/:username/archives",mdxType:"Endpoint"}),(0,l.kt)("br",null),(0,l.kt)("p",null,"Fetches all previous archived player profiles that held this username. Returns an array of ",(0,l.kt)("a",{parentName:"p",href:"/api/players/player-type-definitions#object-player-archive-with-player"},"PlayerArchiveWithPlayer")," objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Params")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"The player's username.")))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Request")),(0,l.kt)(p.Z,{mdxType:"TabbedCodeBlock"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X GET https://api.wiseoldman.net/v2/players/zezima/archives \\\n  -H "Content-Type: application/json"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const { WOMClient } = require('@wise-old-man/utils');\n\nconst client = new WOMClient();\n\nconst archives = await client.players.getPlayerArchives('zezima');\n"))),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "playerId": 2,\n    "previousUsername": "psikoi",\n    "archiveUsername": "archive42392",\n    "restoredUsername": null,\n    "createdAt": "2022-02-13T16:36:44.464Z",\n    "restoredAt": null,\n    "player": {\n      "id": 2,\n      "username": "archive42392",\n      "displayName": "archive42392",\n      "type": "regular",\n      "build": "main",\n      "country": "PT",\n      "status": "archived",\n      "patron": false,\n      "exp": 0,\n      "ehp": 0,\n      "ehb": 0,\n      "ttm": 0,\n      "tt200m": 0,\n      "registeredAt": "2020-04-02T19:40:06.317Z",\n      "updatedAt": "2023-02-11T13:13:31.999Z",\n      "lastChangedAt": "2023-02-11T13:13:31.620Z",\n      "lastImportedAt": "2022-11-04T21:59:42.472Z"\n    }\n  }\n]\n')))}k.isMDXComponent=!0}}]);